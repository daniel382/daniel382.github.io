{"version":3,"sources":["assets/img/logo.svg","assets/beats/003.mp3","assets/beats/001.mp3","serviceWorker.js","views/Home/style.js","components/Button/style.js","components/Button/index.jsx","components/StopPlayButton/style.js","components/StopPlayButton/index.jsx","components/Beat/index.jsx","components/Lamp/style.js","components/Lamp/index.jsx","components/Header/style.js","components/Header/index.jsx","views/Home/index.jsx","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","HomeContainer","styled","div","SubTitle","h2","TimerLabel","span","Button","button","children","action","onClick","StopPlayButton","icon","className","audio","id","src","Lamp","color","light","Container","Logo","img","Title","h1","Save","title","save","logo","alt","Home","props","b1","document","getElementById","b2","bpm","beats","status","handleChange","bind","startStop","play","this","JSON","parse","localStorage","getItem","setState","d","Date","now","b","currentTime","setTimeout","setItem","stringify","alert","Header","style","justifyContent","height","Beat","beat1","beat2","Component","ReactDOM","render","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ae49b38c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8713ac94.svg\";","module.exports = __webpack_public_path__ + \"static/media/003.ec31a86b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/001.6e8a1bb6.mp3\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import styled from 'styled-components'\n\nexport const HomeContainer = styled.div`\n    width: 375px;\n    height: 100vh;\n    margin: 0 auto;\n    background-color: #343c42;\n    flex-direction: column;\n`\n\nexport const SubTitle = styled.h2`\n    font-size: 2em;\n    margin: 0 auto;\n`\n\nexport const TimerLabel = styled.span`\n    font-size: 5em;\n    align-self: center;\n    justify-self: center;\n    margin: 0 auto;\n`","import styled from 'styled-components'\n\nexport const Button = styled.button`\n    border: 1px solid #de8603;\n    border-radius: 4px;\n    background-color: inherit;\n    color: #fff;\n    padding: .4em .6em;\n    width: 40px;\n    align-self: center;\n    margin-bottom: .5em;\n`","import React from 'react'\nimport { Button } from './style'\n\nexport default ({ children, action }) =>\n    <Button onClick={ action }>\n        { children }\n    </Button>","import styled from 'styled-components'\n\nexport const StopPlayButton = styled.button`\n    height: 80px;\n    width: 80px;\n    border-radius: 50%;\n    border: none;\n    color: #fff;\n    background-color: #e20000;\n    font-size: 1.5em;\n    margin: auto;\n`","import React from 'react'\nimport { StopPlayButton } from './style'\n\nexport default ({ icon, action }) =>\n    <StopPlayButton onClick={ action }>\n        <i className={ `fas fa-${ icon }` }></i>\n    </StopPlayButton>","import React from 'react'\n\nexport default ({ audio, id }) =>\n    <audio id={ id } src={ audio }></audio>","import styled from 'styled-components'\n\nexport const Lamp = styled.div`\n    height: 28px;\n    width: 28px;\n    border-radius: 50%;\n    background-color: ${ ({ color }) => color };\n    margin: 0 .5em;\n    box-shadow: 0px 0px ${ ({ light }) => light ? 2 : 15 }px #000 inset;\n`","import React from 'react'\nimport { Lamp } from './style'\n\nexport default ({ color, light }) =>\n    <Lamp color={ color } light={ light } />","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    height: 10%;\n    width: 100%;\n    padding: .5em 1em;\n    align-items: center;\n    justify-content: space-between;\n`\n\nexport const Logo = styled.img`\n    height: 45px;\n    margin-right: 5px;\n`\n\nexport const Title = styled.h1`\n    font-size: 2em;\n`\n\nexport const Save = styled.button`\n    background-color: inherit;\n    border: none;\n    outline: none;\n    padding: .3em;\n    color: #fff;\n`","import React from 'react'\nimport { Container, Logo, Title, Save } from './style';\n\nimport logo from '../../assets/img/logo.svg'\n\nexport default ({ title, save }) =>\n    <Container>\n        <Title>\n            <Logo src={ logo } alt=\"Me-tronome logo\"/>\n            { title }\n        </Title>\n        {\n            save\n                ? <Save onClick={ save }><i className=\"fas fa-save\"></i></Save>\n                : null\n        }\n    </Container>","import React, { Component } from 'react'\nimport { HomeContainer, SubTitle, TimerLabel} from './style'\n\nimport Button from '../../components/Button'\nimport StopPlayButton from '../../components/StopPlayButton'\nimport Beat from '../../components/Beat'\nimport Lamp from '../../components/Lamp'\nimport Header from '../../components/Header'\n\nimport beat1 from '../../assets/beats/003.mp3'\nimport beat2 from '../../assets/beats/001.mp3'\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            bpm: 60,\n            beats: 0,\n            status: false,\n        }\n        \n        this.handleChange = this.handleChange.bind(this)\n        this.startStop = this.startStop.bind(this)\n        this.play = this.play.bind(this)\n        this.save = this.save.bind(this)\n    }\n    \n    b1 = document.getElementById('beat-1')\n    b2 = document.getElementById('beat-2')\n\n    componentDidMount() {\n        this.b1 = document.getElementById('beat-1')\n        this.b2 = document.getElementById('beat-2')\n\n        const initialState = { bpm: 60, beats: 0, status: false }\n        const state = JSON.parse(window.localStorage.getItem('default')) || initialState\n\n        this.setState(state)\n    }\n\n    handleChange(bpm) {\n        if(bpm < 30)\n            bpm = 30\n        else if (bpm > 300)\n            bpm = 300\n        \n        this.setState({ bpm })\n    }\n\n    play() {\n        const d = Date.now()\n        const { bpm, beats, status } = this.state\n\n        if(!status) return\n\n        let b = beats\n\n        if(b === 4 || b === 0)\n            b = 1\n        else\n            b++\n\n        if(b === 1) {\n            this.b1.currentTime = 0\n            this.b1.play()\n        } else {\n            this.b2.currentTime = 0\n            this.b2.play()\n        }\n\n        this.setState({ beats: b })\n        return setTimeout(() => this.play(status), (60000 / bpm) - (Date.now() - d))\n    }\n\n    startStop() {\n        let { status, beats } = this.state\n\n        if(!status) {\n            status = true\n        } else {\n            status = false\n            beats = 0\n        }\n\n        this.setState({ status, beats }, this.play)\n    }\n\n    save() {\n        const { bpm  } = this.state\n        let { beats, status } = this.state\n\n        // evitar bugs ao salvar\n        beats = 0\n        status = false\n\n        window.localStorage.setItem('default', JSON.stringify({ bpm, beats, status}))\n        alert('Saved!')\n    }\n\n    render() {\n        const { bpm, beats, status } = this.state\n\n        return (\n            <HomeContainer>\n                <Header title=\"Me-tronome\" save={ this.save } />\n    \n                <div className=\"row\">\n                    <div className=\"col\" style={{ justifyContent: 'space-between'}}>\n                        <Lamp color=\"#e20000\" light={ beats === 1 } />\n                        <Lamp color=\"#fd831a\" light={ beats === 2 } />\n                        <Lamp color=\"#fd831a\" light={ beats === 3 } />\n                        <Lamp color=\"#fd831a\" light={ beats === 4 } />\n                    </div>\n                </div>\n    \n                <div className=\"row\">\n                    <div className=\"col\">\n                        <SubTitle>BPM</SubTitle>\n                    </div>\n                </div>\n    \n                <div className=\"row\">\n                    <div className=\"col-4 column-d\">\n                        <Button action={ () => this.handleChange(bpm - 1) }>-1</Button>\n                        <Button action={ () => this.handleChange(bpm - 5) }>-5</Button>\n                    </div>\n    \n                    <div className=\"col-2\">\n                        <TimerLabel>{ bpm }</TimerLabel>\n                    </div>\n    \n                    <div className=\"col-4 column-d\">\n                        <Button action={ () => this.handleChange(bpm + 1) }>+1</Button>\n                        <Button action={ () => this.handleChange(bpm + 5) }>+5</Button>\n                    </div>\n                </div>\n    \n                <div className=\"row\" style={{ height: '50%' }}>\n                    <div className=\"col\">\n                        <StopPlayButton\n                            icon={ status ? \"stop\" : \"play\" }\n                            action={ this.startStop }\n                        />\n                    </div>\n    \n                    <Beat id=\"beat-1\" audio={ beat1 } />\n                    <Beat id=\"beat-2\" audio={ beat2 } />\n                </div>\n            </HomeContainer>\n        )\n    }\n}\n\n/* future state form */\n/*\nconst state = {\n    name: 'default', // perfil name, [default or user config]\n\tbpm: 120,\n\tbeats: 4, // [1 - 16]\n    clicks: 4, // [1 - 16]\n    beatCounter: 0, // same actual state.beat\n    clickCounter: 0, // not implemented yet\n\tspeed: '100%', // ['50%', '55%', '60%', ..., '100%']\n\ttimer: {\n        status: false, // true = on, false = off\n        method: 'time', // [time, bars]\n        tempo: '1m30s', // [minutes, bars]\n    },\n    trainer: {\n        status: true, // true = on, false = off\n        type: 'increase', // [increase, decrease]\n        method: 'bars', // [time, bars]\n        tempo: '16' // [minutes, bars]\n    }\n}\n*/","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker';\n\nimport './assets/css/reset.css'\nimport './assets/css/global.css'\nimport '../node_modules/@fortawesome/fontawesome-free/css/all.min.css'\n// import Routes from './routes'\nimport Home from './views/Home'\n\n\nReactDOM.render(<Home />, document.getElementById('app'))\nserviceWorker.register()"],"sourceRoot":""}